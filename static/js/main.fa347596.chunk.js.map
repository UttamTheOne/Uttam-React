{"version":3,"sources":["Components/CustomButton.js","Components/Counter.js","App.js","index.js"],"names":["CustomButton","props","Fragment","type","className","style","borderRadius","outline","boxShadow","onClick","clickHandle","buttonName","Counter","useState","counter","CounterFunction","AlertMessage","show","AlertObj","AlertFunction","Row","Col","xl","borderTopLeftRadius","borderTopRightRadius","Alert","variant","onClose","dismissible","App","Container","Component","ReactDOM","render","document","getElementById"],"mappings":"qUAoBeA,MAnBf,SAAsBC,GACpB,OACE,kBAAC,IAAMC,SAAP,KACE,4BACEC,KAAK,SACLC,UAAU,2CACVC,MAAO,CACLC,aAAc,OACdC,QAAS,OACTC,UAAW,oBAEbC,QAASR,EAAMS,aAEdT,EAAMU,cCiFAC,EA3FC,WAAO,IAAD,EACaC,mBAAS,GADtB,mBACfC,EADe,KACNC,EADM,OAEYF,mBAAS,CACvCG,aAAc,GACdC,MAAM,IAJY,mBAEfC,EAFe,KAELC,EAFK,KA+BpB,OACE,kBAAC,IAAMjB,SAAP,KACE,kBAACkB,EAAA,EAAD,CAAKhB,UAAU,0BACb,kBAACiB,EAAA,EAAD,CAAKjB,UAAU,OAAOkB,GAAI,GACxB,yBACElB,UAAU,+BACVC,MAAO,CACLC,aAAc,OACdE,UAAW,qBAGb,yBACEJ,UAAU,iCACVC,MAAO,CACLkB,oBAAqB,OACrBC,qBAAsB,SAGxB,uCACA,wBAAIpB,UAAU,gBAAgBU,IAEhC,yBAAKV,UAAU,aACb,kBAACqB,EAAA,EAAD,CACER,KAAMC,EAASD,KACfS,QAAQ,SACRC,QAAS,kBAAMR,EAAc,2BAAKD,GAAN,IAAgBD,MAAM,MAClDW,aAAW,GAEX,2BAAIV,EAASF,aAAb,MAEF,kBAACI,EAAA,EAAD,CAAKhB,UAAU,0BACb,kBAACiB,EAAA,EAAD,CAAKjB,UAAU,mBACb,kBAAC,EAAD,CACEM,YAAa,kBAxDzBQ,EAASD,MACXE,EAAc,2BAAKD,GAAN,IAAgBD,MAAM,UAErCF,GAAgB,SAACD,GAAD,OAAaA,EAAU,MAsDvBH,WAAW,uBAIf,kBAACU,EAAA,EAAD,CAAKjB,UAAU,gCACb,kBAAC,EAAD,CACEM,YAAa,WAxDjB,IAAZI,EACIK,EAAc,CACZH,aAAc,+BACdC,MAAM,IAERF,GAAgB,SAACD,GAAD,OAAaA,EAAU,MAoD3BH,WAAW,uBAIf,kBAACU,EAAA,EAAD,CAAKjB,UAAU,gCACb,kBAAC,EAAD,CACEM,YAAa,kBAtDzBQ,EAASD,MACXE,EAAc,2BAAKD,GAAN,IAAgBD,MAAM,UAGrCF,EAAiBD,EAAU,IAmDXH,WAAW,kBClEhBkB,E,uKAVX,OACE,yBAAKzB,UAAU,OACb,kBAAC0B,EAAA,EAAD,KACE,kBAAC,EAAD,Y,GALQC,a,MCClBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.fa347596.chunk.js","sourcesContent":["import React from \"react\";\r\nfunction CustomButton(props) {\r\n  return (\r\n    <React.Fragment>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-outline-primary font-weight-bold\"\r\n        style={{\r\n          borderRadius: \"25px\",\r\n          outline: \"none\",\r\n          boxShadow: \"0px 5px 8px grey\",\r\n        }}\r\n        onClick={props.clickHandle}\r\n      >\r\n        {props.buttonName}\r\n      </button>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default CustomButton;\r\n","import React, { useState } from \"react\";\r\nimport { Row, Col, Alert } from \"react-bootstrap\";\r\nimport CustomButton from \"./CustomButton\";\r\n\r\nconst Counter = () => {\r\n  var [counter, CounterFunction] = useState(0);\r\n  var [AlertObj, AlertFunction] = useState({\r\n    AlertMessage: \"\",\r\n    show: false,\r\n  });\r\n\r\n  var incrementCounter = () => {\r\n    if (AlertObj.show) {\r\n      AlertFunction({ ...AlertObj, show: false });\r\n    }\r\n    CounterFunction((counter) => counter + 1);\r\n  };\r\n\r\n  var decrementCounter = () => {\r\n    counter === 0\r\n      ? AlertFunction({\r\n          AlertMessage: \"Counter cannot be negative !\",\r\n          show: true,\r\n        })\r\n      : CounterFunction((counter) => counter - 1);\r\n  };\r\n\r\n  var resetCounter = () => {\r\n    if (AlertObj.show) {\r\n      AlertFunction({ ...AlertObj, show: false });\r\n    }\r\n\r\n    CounterFunction((counter = 0));\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Row className=\"justify-content-center\">\r\n        <Col className=\"mt-4\" xl={7}>\r\n          <div\r\n            className=\"card bg-light border-warning\"\r\n            style={{\r\n              borderRadius: \"25px\",\r\n              boxShadow: \"0px 5px 8px grey\",\r\n            }}\r\n          >\r\n            <div\r\n              className=\"card-header bg-dark text-white\"\r\n              style={{\r\n                borderTopLeftRadius: \"25px\",\r\n                borderTopRightRadius: \"25px\",\r\n              }}\r\n            >\r\n              <h4>Counter</h4>\r\n              <h1 className=\"text-warning\">{counter}</h1>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <Alert\r\n                show={AlertObj.show}\r\n                variant=\"danger\"\r\n                onClose={() => AlertFunction({ ...AlertObj, show: false })}\r\n                dismissible\r\n              >\r\n                <b>{AlertObj.AlertMessage} </b>\r\n              </Alert>\r\n              <Row className=\"justify-content-center\">\r\n                <Col className=\"col-12 col-md-4\">\r\n                  <CustomButton\r\n                    clickHandle={() => incrementCounter()}\r\n                    buttonName=\"Increment Counter\"\r\n                  />\r\n                </Col>\r\n\r\n                <Col className=\"pt-3 pt-md-0 col-12 col-md-4\">\r\n                  <CustomButton\r\n                    clickHandle={() => decrementCounter()}\r\n                    buttonName=\"Decrement Counter\"\r\n                  />\r\n                </Col>\r\n\r\n                <Col className=\"pt-3 pt-md-0 col-12 col-md-3\">\r\n                  <CustomButton\r\n                    clickHandle={() => resetCounter()}\r\n                    buttonName=\"Reset\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Counter;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport Counter from \"./Components/Counter\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Container>\r\n          <Counter />\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}